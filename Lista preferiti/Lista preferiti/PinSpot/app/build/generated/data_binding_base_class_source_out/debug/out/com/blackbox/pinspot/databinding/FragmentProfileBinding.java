// Generated by view binder compiler. Do not edit!
package com.blackbox.pinspot.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.blackbox.pinspot.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonUserLogout;

  @NonNull
  public final TextView textViewEmailValidated;

  @NonNull
  public final TextView textViewUserEmail;

  @NonNull
  public final TextView textViewUserId;

  @NonNull
  public final TextView textViewUserName;

  private FragmentProfileBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonUserLogout, @NonNull TextView textViewEmailValidated,
      @NonNull TextView textViewUserEmail, @NonNull TextView textViewUserId,
      @NonNull TextView textViewUserName) {
    this.rootView = rootView;
    this.buttonUserLogout = buttonUserLogout;
    this.textViewEmailValidated = textViewEmailValidated;
    this.textViewUserEmail = textViewUserEmail;
    this.textViewUserId = textViewUserId;
    this.textViewUserName = textViewUserName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_user_logout;
      Button buttonUserLogout = ViewBindings.findChildViewById(rootView, id);
      if (buttonUserLogout == null) {
        break missingId;
      }

      id = R.id.textView_email_validated;
      TextView textViewEmailValidated = ViewBindings.findChildViewById(rootView, id);
      if (textViewEmailValidated == null) {
        break missingId;
      }

      id = R.id.textView_user_email;
      TextView textViewUserEmail = ViewBindings.findChildViewById(rootView, id);
      if (textViewUserEmail == null) {
        break missingId;
      }

      id = R.id.textView_user_id;
      TextView textViewUserId = ViewBindings.findChildViewById(rootView, id);
      if (textViewUserId == null) {
        break missingId;
      }

      id = R.id.textView_user_name;
      TextView textViewUserName = ViewBindings.findChildViewById(rootView, id);
      if (textViewUserName == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ConstraintLayout) rootView, buttonUserLogout,
          textViewEmailValidated, textViewUserEmail, textViewUserId, textViewUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
